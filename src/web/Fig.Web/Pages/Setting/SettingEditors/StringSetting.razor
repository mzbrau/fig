@using Fig.Web.Models.Setting.ConfigurationModels
@if (Setting is { IsSecret: true, IsReadOnly: false })
{
    <div class="d-flex flex-column w-100">
        <RadzenPassword @bind-Value=@Setting.Value Disabled="true" Placeholder="Not Set" Class="w-100"/>
        <div class="@(Setting.InSecretEditMode ? "collapse" : "d-flex gap-2") mt-1">
            <RadzenButton Click=@(args => Setting.InSecretEditMode = true) Text="Update Value" 
                         data-test-id="@(EditButtonRef)" ButtonStyle="ButtonStyle.Secondary" 
                         Size="ButtonSize.Small"/>
            <RadzenButton Click=@(args => Setting.ClearSecretValue()) Text="Clear Value" 
                         data-test-id="@(ClearButtonRef)" ButtonStyle="ButtonStyle.Danger" 
                         Size="ButtonSize.Small" Disabled="@(!Setting.CanClearSecretValue)"/>
        </div>
        <div class="@(!Setting.InSecretEditMode ? "collapse" : "d-flex mt-1 flex-column w-100")">
            <div>
                <PasswordWithRating OnValidPassword="password => Setting.UpdatedValue = password" Placeholder="Enter new value" TestId="@(NewPasswordRef)"/>
            </div>

            <RadzenPassword @bind-Value=@Setting.ConfirmUpdatedValue data-test-id="@(ConfirmButtonRef)" Placeholder="Confirm Value" Class="flex-grow-1 mt-1"/>
            <RadzenButton Click=@(args => Setting.SetUpdatedSecretValue()) Text="Apply New Value" 
                         data-test-id="@(SaveButtonRef)" ButtonStyle="ButtonStyle.Secondary" 
                         class="mt-1 align-self-start" Size="ButtonSize.Small"/>
        </div>
        <p class="@(Setting.IsValid ? "collapse" : "")" style="color: pink; font-size: small">@Setting.ValidationExplanation</p>
    </div>
}
else if (Setting.EditorLineCount != null)
{
    <div class="d-flex flex-column w-100">
        <RadzenTextArea @bind-Value=@Setting.Value Disabled="@Setting.IsReadOnly"
                        @oninput=@(args => Setting.ValueChanged(args?.Value?.ToString() ?? string.Empty))
                        Class="w-100" data-test-id="@Setting.Name" Rows="@Setting.EditorLineCount.Value"/>
        <p class="@(Setting.IsValid ? "collapse" : "")" style="color: pink; font-size: small">@Setting.ValidationExplanation</p>
    </div>
}
else
{
    <div class="d-flex flex-column w-100">
        <RadzenTextBox @bind-Value=@Setting.Value Disabled="@Setting.IsReadOnly"
                       @oninput=@(args => Setting.ValueChanged(args.Value?.ToString()))
                       Class="w-100" data-test-id="@Setting.Name"/>
        <p class="@(Setting.IsValid ? "collapse" : "")" style="color: pink; font-size: small">@Setting.ValidationExplanation</p>
    </div>
}

@code
{
    private string EditButtonRef => $"{Setting.Name}_edit";
    private string ConfirmButtonRef => $"{Setting.Name}_confirm";
    private string SaveButtonRef => $"{Setting.Name}_save";
    private string NewPasswordRef => $"{Setting.Name}_newpass";
    private string ClearButtonRef => $"{Setting.Name}_clear";

    [Parameter]
    public StringSettingConfigurationModel Setting { get; set; } = null!;
}