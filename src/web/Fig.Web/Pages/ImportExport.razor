@page "/ImportExport"
@using Fig.Web.Attributes
@using Fig.Contracts.ImportExport
@using Fig.Web.Models.ImportExport
@attribute [Administrator]

<div class="container p-0">
    <div class="row">
        <div class="col">
        </div>
        <div class="col-8">
            <RadzenCard class="m-3">
                <h3 class="h5">Setting Export</h3>
                <p>Export all settings. Secret values will be exported in encrypted format. The same server secret will
                    be required to decrypt them.</p>

                <div class="p-2">
                    <RadzenButton Text="Export" IsBusy="_settingExportInProgress" BusyText="Exporting..."
                                  Click="PerformSettingsExport"/>
                </div>

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Value Only Setting Export</h3>
                <p>Export all settings values.</p>

                <!-- Radio button selection for export mode -->
                <div class="p-2">
                    <RadzenRadioButtonList @bind-Value="_valueOnlyExportMode" TValue="ValueOnlyExportMode"
                                           Orientation="Orientation.Vertical" Change="OnValueOnlyExportModeChanged">
                        <Items>
                            <RadzenRadioButtonListItem Text="All Clients" Value="ValueOnlyExportMode.AllClients"/>
                            <RadzenRadioButtonListItem Text="Select Clients" Value="ValueOnlyExportMode.SelectClients"/>
                        </Items>
                    </RadzenRadioButtonList>
                </div>

                <!-- Client selection panel -->
                @if (_valueOnlyExportMode == ValueOnlyExportMode.SelectClients)
                {
                    <div class="p-2">
                        <div class="mb-2">
                            <RadzenTextBox @bind-Value="_clientFilter" @oninput="OnClientFilterInput"
                                           Placeholder="Filter clients..." class="w-100"/>
                        </div>

                        @if (_loadingClients)
                        {
                            <div class="text-center p-3">
                                <RadzenProgressBarCircular ShowValue="false" Mode="ProgressBarMode.Indeterminate"
                                                           Size="ProgressBarCircularSize.Medium"/>
                                <p>Loading clients...</p>
                            </div>
                        }
                        else if (_filteredClients.Any())
                        {
                            <div class="mb-2">
                                <RadzenButton Text="Select All" Click="SelectAllClients" Size="ButtonSize.Small"
                                              ButtonStyle="ButtonStyle.Secondary" class="me-2"/>
                                <RadzenButton Text="Select None" Click="SelectNoClients" Size="ButtonSize.Small"
                                              ButtonStyle="ButtonStyle.Secondary"/>
                            </div>

                            <div style="max-height: 300px; overflow-y: auto; border: 1px solid #ccc; padding: 10px;">
                                @foreach (var client in _filteredClients)
                                {
                                    <div class="d-flex align-items-center mb-2">
                                        <RadzenCheckBox @bind-Value="client.IsSelected" Name="@client.Identifier"/>
                                        <label for="@client.Identifier" class="ms-2 flex-grow-1">
                                            <strong>@client.DisplayName</strong>
                                            <span class="text-muted">(@client.SettingCount settings)</span>
                                        </label>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">No clients available for selection.</p>
                        }
                    </div>
                }

                <div class="d-flex align-items-center p-2">
                    <label class="p-2">Exclude Environment Specific Settings</label>
                    <RadzenSwitch @bind-Value="_excludeEnvironmentSpecific"/>
                </div>

                <div class="p-2">
                    <RadzenButton Text="Export" IsBusy="_valueOnlyExportInProgress" BusyText="Exporting..."
                                  Click="PerformValueOnlySettingsExport"/>
                </div>

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Change Set Export</h3>
                <p>Compare current settings with a reference export file and generate a diff export containing only
                    changed settings. Select a value only export file to use as reference, then generate the change set
                    export.</p>
                <div class="p-2">
                    <RadzenFileInput TValue="string" Class="w-100" ChooseText="Select Reference File"
                                     Accept="application/json"
                                     Change="@(ChangeSetReferenceFileChanged)" Error="@(OnChangeSetFileError)"/>
                </div>

                @if (_changeSetFileIsInvalid)
                {
                    <div class="p-2">
                        <RadzenAlert AlertStyle="AlertStyle.Danger" Icon="error" Title="Invalid File"
                                     Text="@_changeSetStatus"/>
                    </div>
                }

                @if (_changeSetFileSelected && !_changeSetFileIsInvalid)
                {
                    <div class="p-2">
                        <RadzenTextArea Name="changeSetStatus" @bind-Value="@_changeSetStatus" Disabled="false"
                                        ReadOnly="true"
                                        Class="w-100" Rows="6"/>
                    </div>

                    <div class="d-flex align-items-center p-2">
                        <label class="p-2">Exclude Environment Specific Settings</label>
                        <RadzenSwitch @bind-Value="_changeSetExcludeEnvironmentSpecific"/>
                    </div>

                    <div class="p-2">
                        <RadzenButton Text="Export Change Set" IsBusy="_changeSetExportInProgress"
                                      BusyText="Exporting..." Click="PerformChangeSetExport"
                                      Disabled="_changeSetFileIsInvalid"/>
                    </div>
                }

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Setting Import</h3>
                <p>Settings can be imported into Fig using the button below. Both full and value only exports are
                    accepted.</p>
                <div class="p-2">
                    <RadzenFileInput TValue="string" Class="w-100" ChooseText="Select File" Accept="application/json"
                                     Change="@(SettingsImportFileChanged)" Error="@(OnImportFileError)"/>
                </div>
                <div class="p-2">
                    <RadzenTextArea Name="textValue" @bind-Value="@_importStatus" Disabled="false" ReadOnly="true"
                                    Class="w-100" Rows="10" Visible="_importInProgress"/>
                </div>
                <div class="p-2">
                    <RadzenDropDown AllowClear="false" TValue="ImportType" Class="w-100"
                                    AllowFiltering="false"
                                    Data="@ImportTypes"
                                    TextProperty="EnumName" ValueProperty="EnumValue"
                                    @bind-Value="@_importType"
                                    Visible="_importInProgress"/>
                </div>

                <div class="p-2">
                    <RadzenButton Text="Import" Click="PerformSettingsImport" Visible="_importInProgress"
                                  Disabled="_importIsInvalid"/>
                </div>

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Fig Report</h3>
                <p>Output all details of running instances and all settings in markdown format.</p>

                <div class="d-flex align-items-center">
                    <label class="p-2">Mask Secrets</label>
                    <RadzenSwitch @bind-Value="_maskSecrets"/>
                </div>

                <div class="d-flex align-items-center">
                    <label class="p-2">Include Setting Analysis</label>
                    <RadzenSwitch @bind-Value="_includeSettingAnalysis"/>
                </div>

                <div class="p-2">
                    <RadzenButton Text="Export" IsBusy="_markdownExportInProgress" BusyText="Exporting..."
                                  Click="PerformSettingsReport"/>
                </div>

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Deferred Import Clients</h3>
                <p>Value only settings that have been imported but no matching client was found. Settings will be
                    applied when the client registers for the first time.</p>

                <RadzenDataGrid @ref="_deferredClientGrid" AllowFiltering="true" AllowColumnResize="true"
                                FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="50" AllowPaging="true"
                                PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                                Data="@DeferredClients" TItem="DeferredImportClientModel"
                                LogicalFilterOperator="LogicalFilterOperator.Or" AllowColumnPicking="true">
                    <Columns>
                        <Radzen.Blazor.RadzenDataGridColumn TItem="DeferredImportClientModel" Property="Name"
                                                            Filterable="true" Title="Name" TextAlign="TextAlign.Left"
                                                            SortOrder="SortOrder.Descending"/>
                        <Radzen.Blazor.RadzenDataGridColumn TItem="DeferredImportClientModel" Property="Instance"
                                                            Filterable="true" Title="Instance"
                                                            TextAlign="TextAlign.Left"/>
                        <Radzen.Blazor.RadzenDataGridColumn TItem="DeferredImportClientModel" Property="SettingCount"
                                                            Filterable="true" Title="Setting Count"
                                                            TextAlign="TextAlign.Left"/>
                        <Radzen.Blazor.RadzenDataGridColumn TItem="DeferredImportClientModel" Property="RequestingUser"
                                                            Filterable="true" Title="Requesting User"
                                                            TextAlign="TextAlign.Left"/>
                    </Columns>
                </RadzenDataGrid>
            </RadzenCard>
        </div>
        <div class="col">
        </div>
    </div>
</div>