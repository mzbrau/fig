@page "/ImportExport"
@using Fig.Web.Attributes
@using Fig.Contracts.ImportExport
@using Fig.Web.Models.ImportExport
@attribute [Administrator]

<div class="container p-0">
    <div class="row">
        <div class="col">
        </div>
        <div class="col-8">
            <RadzenCard class="m-3">
                <h3 class="h5">Setting Export</h3>
                <p>Export all settings. Secret values will be exported in encrypted format. The same server secret will be required to decrypt them.</p>
                
                <div class="p-2">
                    <RadzenButton Text="Export" IsBusy="_settingExportInProgress" BusyText="Exporting..." Click="PerformSettingsExport" />
                </div>

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Value Only Setting Export</h3>
                <p>Export all settings values.</p>

                <div class="p-2">
                    <RadzenButton Text="Export" IsBusy="_valueOnlyExportInProgress" BusyText="Exporting..." Click="PerformValueOnlySettingsExport" />
                </div>

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Setting Import</h3>
                <p>Settings can be imported into Fig using the button below. Both full and value only exports are accepted.</p>
                <div class="p-2">
                    <RadzenFileInput TValue="string" Class="w-100" ChooseText="Select File" Accept="application/json"
                                     Change="@(SettingsImportFileChanged)" Error="@(OnImportFileError)"/>
                </div>
                <div class="p-2">
                    <RadzenTextArea Name="textValue" @bind-Value="@_importStatus" Disabled="false" ReadOnly="true"
                                    Class="w-100" Rows="10" Visible="_importInProgress"/>
                </div>
                <div class="p-2">
                    <RadzenDropDown AllowClear="false" TValue="ImportType" Class="w-100"
                                    AllowFiltering="false"
                                    Data="@ImportTypes"
                                    TextProperty="EnumName" ValueProperty="EnumValue"
                                    @bind-Value="@_importType"
                                    Visible="_importInProgress"/>
                </div>

                <div class="p-2">
                    <RadzenButton Text="Import" Click="PerformSettingsImport" Visible="_importInProgress" Disabled="_importIsInvalid"/>
                </div>

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Fig Report</h3>
                <p>Output all details of running instances and all settings in markdown format.</p>

                <div class="d-flex align-items-center">
                    <label class="p-2">Mask Secrets</label>
                    <RadzenSwitch @bind-Value="_maskSecrets"/>
                </div>
                
                <div class="d-flex align-items-center">
                    <label class="p-2">Include Setting Analysis</label>
                    <RadzenSwitch @bind-Value="_includeSettingAnalysis" />
                </div>

                <div class="p-2">
                    <RadzenButton Text="Export" IsBusy="_markdownExportInProgress" BusyText="Exporting..." Click="PerformSettingsReport" />
                </div>

            </RadzenCard>

            <RadzenCard class="m-3">
                <h3 class="h5">Deferred Import Clients</h3>
                <p>Value only settings that have been imported but no matching client was found. Settings will be applied when the client registers for the first time.</p>

                <RadzenDataGrid @ref="_deferredClientGrid" AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="50" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                                Data="@DeferredClients" TItem="DeferredImportClientModel" LogicalFilterOperator="LogicalFilterOperator.Or" AllowColumnPicking="true">
                    <Columns>
                        <Radzen.Blazor.RadzenDataGridColumn TItem="DeferredImportClientModel" Property="Name" Filterable="true" Title="Name" TextAlign="TextAlign.Left" SortOrder="SortOrder.Descending"/>
                        <Radzen.Blazor.RadzenDataGridColumn TItem="DeferredImportClientModel" Property="Instance" Filterable="true" Title="Instance" TextAlign="TextAlign.Left"/>
                        <Radzen.Blazor.RadzenDataGridColumn TItem="DeferredImportClientModel" Property="SettingCount" Filterable="true" Title="Setting Count" TextAlign="TextAlign.Left"/>
                        <Radzen.Blazor.RadzenDataGridColumn TItem="DeferredImportClientModel" Property="RequestingUser" Filterable="true" Title="Requesting User" TextAlign="TextAlign.Left"/>
                    </Columns>
                </RadzenDataGrid>
            </RadzenCard>
        </div>
        <div class="col">
        </div>
    </div>
</div>