"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro"},{"type":"link","label":"Client Configuration","href":"/docs/client-configuration","docId":"client-configuration"},{"type":"category","label":"Overview","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Why Fig?","href":"/docs/overview/why-fig","docId":"overview/why-fig"},{"type":"link","label":"Architecture","href":"/docs/overview/architecture","docId":"overview/architecture"},{"type":"link","label":"Comparison To Alternatives","href":"/docs/overview/comparison-to-alternatives","docId":"overview/comparison-to-alternatives"}],"href":"/docs/category/overview"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Settings Management","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Default Values","href":"/docs/features/settings-management/default-values","docId":"features/settings-management/default-values"},{"type":"link","label":"Supported Types","href":"/docs/features/settings-management/supported-types","docId":"features/settings-management/supported-types"},{"type":"link","label":"Value History","href":"/docs/features/settings-management/value-history","docId":"features/settings-management/value-history"},{"type":"link","label":"Validation","href":"/docs/features/settings-management/validation","docId":"features/settings-management/validation"},{"type":"link","label":"Secret Settings","href":"/docs/features/settings-management/secret-settings","docId":"features/settings-management/secret-settings"},{"type":"link","label":"Advanced Settings","href":"/docs/features/settings-management/advanced-settings","docId":"features/settings-management/advanced-settings"},{"type":"link","label":"Ordering","href":"/docs/features/settings-management/ordering","docId":"features/settings-management/ordering"},{"type":"link","label":"Multi-Line Strings","href":"/docs/features/settings-management/multiline","docId":"features/settings-management/multiline"},{"type":"link","label":"Valid Values (Dropdowns)","href":"/docs/features/settings-management/valid-values","docId":"features/settings-management/valid-values"},{"type":"link","label":"Verification","href":"/docs/features/settings-management/verification","docId":"features/settings-management/verification"},{"type":"link","label":"Category","href":"/docs/features/settings-management/category","docId":"features/settings-management/category"},{"type":"link","label":"Data Grids","href":"/docs/features/settings-management/data-grids","docId":"features/settings-management/data-grids"},{"type":"link","label":"Dependent Settings","href":"/docs/features/settings-management/dependent-settings","docId":"features/settings-management/dependent-settings"},{"type":"link","label":"Live Update","href":"/docs/features/settings-management/live-update","docId":"features/settings-management/live-update"},{"type":"link","label":"Setting Constants","href":"/docs/features/settings-management/setting-constants","docId":"features/settings-management/setting-constants"},{"type":"link","label":"Groups","href":"/docs/features/settings-management/groups","docId":"features/settings-management/groups"},{"type":"link","label":"Setting Descriptions","href":"/docs/features/settings-management/setting-descriptions","docId":"features/settings-management/setting-descriptions"}],"href":"/docs/category/settings-management"},{"type":"link","label":"Verifications","href":"/docs/features/verifications","docId":"features/verifications"},{"type":"link","label":"Event History","href":"/docs/features/event-history","docId":"features/event-history"},{"type":"link","label":"User Management","href":"/docs/features/user-management","docId":"features/user-management"},{"type":"link","label":"Import / Export","href":"/docs/features/import-export","docId":"features/import-export"},{"type":"link","label":"Lookup Tables","href":"/docs/features/lookup-tables","docId":"features/lookup-tables"},{"type":"link","label":"Configuration","href":"/docs/features/configuration","docId":"features/configuration"},{"type":"link","label":"Client Management","href":"/docs/features/client-management","docId":"features/client-management"},{"type":"link","label":"API Management","href":"/docs/features/api-management","docId":"features/api-management"},{"type":"link","label":"Offline Settings","href":"/docs/features/offline-settings","docId":"features/offline-settings"},{"type":"link","label":"Live Reload","href":"/docs/features/live-reload","docId":"features/live-reload"},{"type":"link","label":"Authentication","href":"/docs/features/authentication","docId":"features/authentication"},{"type":"link","label":"Instances","href":"/docs/features/instances","docId":"features/instances"},{"type":"link","label":"Web Hooks","href":"/docs/features/web-hooks","docId":"features/web-hooks"},{"type":"link","label":"Compact View","href":"/docs/features/compact-view","docId":"features/compact-view"},{"type":"link","label":"Memory Leak Detection","href":"/docs/features/memory-leak-detection","docId":"features/memory-leak-detection"},{"type":"link","label":"Client Descriptions","href":"/docs/features/client-descriptions","docId":"features/client-descriptions"},{"type":"link","label":"Settings Table","href":"/docs/features/settings-table","docId":"features/settings-table"},{"type":"link","label":"Change Message","href":"/docs/features/change-message","docId":"features/change-message"}],"href":"/docs/category/features"},{"type":"category","label":"Integration Points","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Web Hook Integrations","href":"/docs/integration-points/web-hook-integration","docId":"integration-points/web-hook-integration"},{"type":"link","label":"Lookup Table Integrations","href":"/docs/integration-points/lookup-table-integration","docId":"integration-points/lookup-table-integration"}],"href":"/docs/category/integration-points"},{"type":"link","label":"Security Features","href":"/docs/security","docId":"security"},{"type":"link","label":"Database","href":"/docs/database","docId":"database"},{"type":"link","label":"Integration Testing","href":"/docs/integration-testing","docId":"integration-testing"},{"type":"link","label":"Examples","href":"/docs/examples","docId":"examples"},{"type":"link","label":"FAQ\'s","href":"/docs/faqs","docId":"faqs"},{"type":"link","label":"Acknowledgements","href":"/docs/acknowledgements","docId":"acknowledgements"},{"type":"link","label":"Error Monitoring","href":"/docs/error-monitoring","docId":"error-monitoring"}]},"docs":{"acknowledgements":{"id":"acknowledgements","title":"Acknowledgements","description":"Libraries that made Fig possible","sidebar":"tutorialSidebar"},"client-configuration":{"id":"client-configuration","title":"Client Configuration","description":"Fig can be installed into any client type however this section will focus on asp.net style projects written in dotnet 7.","sidebar":"tutorialSidebar"},"database":{"id":"database","title":"Database","description":"Fig uses an SQLLite database by default but it can use any SQL database that is supported by NHIbernate.","sidebar":"tutorialSidebar"},"error-monitoring":{"id":"error-monitoring","title":"Error Monitoring","description":"Fig has an integration to Sentry for monitoring unhandled exceptions that might occur.","sidebar":"tutorialSidebar"},"examples":{"id":"examples","title":"Examples","description":"The Fig repository contains a number of examples. You can find them here.","sidebar":"tutorialSidebar"},"faqs":{"id":"faqs","title":"FAQ\'s","description":"How to build and run containers locally?","sidebar":"tutorialSidebar"},"features/api-management":{"id":"features/api-management","title":"API Management","description":"The Fig API is stateless and as a result, it is possible to run multiple instances of the API pointing towards the same database.","sidebar":"tutorialSidebar"},"features/authentication":{"id":"features/authentication","title":"Authentication","description":"Fig has built in authentication to protect your settings. Access to the Fig web application is protected by a username and password.","sidebar":"tutorialSidebar"},"features/change-message":{"id":"features/change-message","title":"Change Message","description":"When you save settings changes, you will be prompted to enter a change message. This message will be stored in the event log along with the value changes. It can be a good way to record the motivation behind the change.","sidebar":"tutorialSidebar"},"features/client-descriptions":{"id":"features/client-descriptions","title":"Client Descriptions","description":"When configuring many different clients, having a description of that application and what it does can be useful to the person performing the configuration. Fig forces developers to enter a value in for the client description when they start using Fig and this description is then available when performing the configuration.","sidebar":"tutorialSidebar"},"features/client-management":{"id":"features/client-management","title":"Client Management","description":"Administrators in Fig are able to see a list of all currently connected clients. Clients are considered connected if they poll the API at least once every 2 times the configured poll interval for that client. Clients will poll automatically as part of the Fig.Client nuget package and deault to 30 seconds per poll.","sidebar":"tutorialSidebar"},"features/compact-view":{"id":"features/compact-view","title":"Compact View","description":"When there are lots of settings for a client or settings have large descriptions it can be difficult to get an overview of the settings and their values. This is where compact view can be useful. An individual setting can have their compact view toggled by clicking on the name. All settings under a client can be collapsed or expanded using the command buttons at the top of the settings.","sidebar":"tutorialSidebar"},"features/configuration":{"id":"features/configuration","title":"Configuration","description":"There are a few parameters which can be configured for Fig which enable or disable certain features in the application.","sidebar":"tutorialSidebar"},"features/event-history":{"id":"features/event-history","title":"Event History","description":"Everything that occurs within Fig is logged in the database and is available in the event history.","sidebar":"tutorialSidebar"},"features/import-export":{"id":"features/import-export","title":"Import / Export","description":"Fig supports a number of different types of import and export.","sidebar":"tutorialSidebar"},"features/instances":{"id":"features/instances","title":"Instances","description":"Fig supports overriding the default settings for a client with an instance. An instance is a special key that can be passed by the calling client. When an instance is provided, Fig attempts to find settings matching that instance name. If none are found, the default settings for that client are returned.","sidebar":"tutorialSidebar"},"features/live-reload":{"id":"features/live-reload","title":"Live Reload","description":"By default, clients using the Fig.Client nuget package will support the live reload of settings. This means that when a setting value is updated in the Web Client, that updated value will immediately be available in the settings class for that client. In addition, a settings changed event will be raised on the settings class which can be used to take action when it occurs.","sidebar":"tutorialSidebar"},"features/lookup-tables":{"id":"features/lookup-tables","title":"Lookup Tables","description":"Fig supports the concept of lookup tables. This is where a set of setting values supplied by a client can be translated into more user friendly values.","sidebar":"tutorialSidebar"},"features/memory-leak-detection":{"id":"features/memory-leak-detection","title":"Memory Leak Detection","description":"Fig has built in memory leak detection. Clients with suspected memory leaks will be shown in the insights page and web hooks can be sent once a possible leak is detected.","sidebar":"tutorialSidebar"},"features/offline-settings":{"id":"features/offline-settings","title":"Offline Settings","description":"By default, clients using the Fig.Client nuget package will support offline settings. This is a fallback mechanism for when the Fig.API is offline. If the client application starts and it is unable to contact the API, it will attempt to load the last values that it got from the API and run with those. It will continue to attempt to contact the API and will update the settings once successfully reconnected.","sidebar":"tutorialSidebar"},"features/settings-management/advanced-settings":{"id":"features/settings-management/advanced-settings","title":"Advanced Settings","description":"An advanced setting is one that has a reasionable default value that would not need to be changed in a normal deployment. As a result, Fig will hide this setting by default to allow those configuring the application to focus on the settings that do need to be changed. An example might be a timeout value. In most cases, the developer will have chosen a reasionable default but the setting is still included incase it needs to be changed for debugging for when the application is deployed in a specific environment.","sidebar":"tutorialSidebar"},"features/settings-management/category":{"id":"features/settings-management/category","title":"Category","description":"It is possible to display an association between different settings using the category feature. When a setting is assigned a category, it is assigned a category name and a color which will visually indicate that it is related to other settings with the same color and category name.","sidebar":"tutorialSidebar"},"features/settings-management/data-grids":{"id":"features/settings-management/data-grids","title":"Data Grids","description":"Fig supports data grids for displaying complex settings.","sidebar":"tutorialSidebar"},"features/settings-management/default-values":{"id":"features/settings-management/default-values","title":"Default Values","description":"Fig allows clients to specify a default value for each setting. Default values are specified wtihin the Setting attribute.","sidebar":"tutorialSidebar"},"features/settings-management/dependent-settings":{"id":"features/settings-management/dependent-settings","title":"Dependent Settings","description":"Sometimes there are settings that enable other settings. For example an application might be able to work both with and without authentiation. If authentication is selected then a username and password must be supplied. In this case, we can add an attribute to the authentication switch to hide the irrelevent settings when disabled.","sidebar":"tutorialSidebar"},"features/settings-management/groups":{"id":"features/settings-management/groups","title":"Groups","description":"Fig has the capability to group settings from multiple setting clients so they can be edited in one place. This is useful when multiple applications require the same configuration such as a database connection string. With the groups feature this can be set once and applied to all requesting clients simultaniously.","sidebar":"tutorialSidebar"},"features/settings-management/live-update":{"id":"features/settings-management/live-update","title":"Live Update","description":"Fig supports live setting update by default. This means that when a setting value is updated within the Fig web client and saved, any connected clients will be informed of this change on their next poll interval and then request the updated values and apply them. This can be tracked under connected clients within the web client.","sidebar":"tutorialSidebar"},"features/settings-management/multiline":{"id":"features/settings-management/multiline","title":"Multi-Line Strings","description":"Multi-line string settings are supported in Fig by adding an attribute to the string setting.","sidebar":"tutorialSidebar"},"features/settings-management/ordering":{"id":"features/settings-management/ordering","title":"Ordering","description":"By default, settings are ordered alphabetically but this can be overridden in the setting configuration.","sidebar":"tutorialSidebar"},"features/settings-management/secret-settings":{"id":"features/settings-management/secret-settings","title":"Secret Settings","description":"Fig supports protecting the values of some settings. Secret settings are treated as passwords within the web client and are not shown to the configuring user.","sidebar":"tutorialSidebar"},"features/settings-management/setting-constants":{"id":"features/settings-management/setting-constants","title":"Setting Constants","description":"Fig supports substituting live values with pre-defined constants in string settings so they are available to the using services.","sidebar":"tutorialSidebar"},"features/settings-management/setting-descriptions":{"id":"features/settings-management/setting-descriptions","title":"Setting Descriptions","description":"Descriptions should be supplied with each setting to explain what the setting does and any potential implications of changing it. Descriptions are provided within the [Setting] attribute.","sidebar":"tutorialSidebar"},"features/settings-management/supported-types":{"id":"features/settings-management/supported-types","title":"Supported Types","description":"Fig supports most c# property types out of the box with customized editors for each type. More complex types are supported using data grids or JSON.","sidebar":"tutorialSidebar"},"features/settings-management/valid-values":{"id":"features/settings-management/valid-values","title":"Valid Values (Dropdowns)","description":"In many cases, settings may have a limited set of valid values. In these scenarios, it will assist those configuring the application to provide a dropdown list of valid values to choose from. One example might be the selection of log levels or setting an enum value.","sidebar":"tutorialSidebar"},"features/settings-management/validation":{"id":"features/settings-management/validation","title":"Validation","description":"String, integer or long type settings can have custom regular expression that will be used to validate the setting. If a value is entered that does not match the regex then a custom message will be shown to the person configuring the setting and saving will not be allowed.","sidebar":"tutorialSidebar"},"features/settings-management/value-history":{"id":"features/settings-management/value-history","title":"Value History","description":"Every value change that occurs in Fig is recorded in the database and is available from within the setting card.","sidebar":"tutorialSidebar"},"features/settings-management/verification":{"id":"features/settings-management/verification","title":"Verification","description":"Verification attrbutes can be added to classes to enable verification from within the Web Client.","sidebar":"tutorialSidebar"},"features/settings-table":{"id":"features/settings-table","title":"Settings Table","description":"All settings can be reviewed in table format which includes when the settings where last. This can be useful when trying to search for specific settings or review recent changes in an easy to review format. All columns can be filtered or sorted as required.","sidebar":"tutorialSidebar"},"features/user-management":{"id":"features/user-management","title":"User Management","description":"Administrators in the Fig web client have the ability to manage users. They are able to create and delete users (or other administrators) as well as set and reset passwords.","sidebar":"tutorialSidebar"},"features/verifications":{"id":"features/verifications","title":"Verifications","description":"Fig includes a framework for verifying setting values from within the UI. The setting verifications occur within the Fig API.","sidebar":"tutorialSidebar"},"features/web-hooks":{"id":"features/web-hooks","title":"Web Hooks","description":"Fig has a web hook integration point which allows third party integrations to be called by Fig in response to certain events occurring. This allows events from Fig to be available more widely for example sent to someone via email or posted to a Slack or Teams channel.","sidebar":"tutorialSidebar"},"integration-points/lookup-table-integration":{"id":"integration-points/lookup-table-integration","title":"Lookup Table Integrations","description":"In addition to being able to create, update and delete lookup tables via the Fig web application, it is also possible to write an integration that performs the same functions.","sidebar":"tutorialSidebar"},"integration-points/web-hook-integration":{"id":"integration-points/web-hook-integration","title":"Web Hook Integrations","description":"Fig has an integration point which allows notifications to be sent as a result of certain events occurring within the system. For details on how web hooks can be configured, see Web Hooks.","sidebar":"tutorialSidebar"},"integration-testing":{"id":"integration-testing","title":"Integration Testing","description":"It is possible to write integration tests for services using fig. If using Microsoft\'s DI framework, it is possible to overwrite items registered in the container for use in the component being tested. See this link about how to write integration tests for ASP.NET core.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"To get up and running with Fig, you\'ll need to set up the API, Web and integrate the client nuget package into your application.","sidebar":"tutorialSidebar"},"overview/architecture":{"id":"overview/architecture","title":"Architecture","description":"Fig is a complete solution for managing settings across multiple micro-services. It consists of three components: a client library, API and web front end.","sidebar":"tutorialSidebar"},"overview/comparison-to-alternatives":{"id":"overview/comparison-to-alternatives","title":"Comparison To Alternatives","description":"When using dotnet you have a wide range of options for providing settings to your application such as app.config files, appsettings.json files, registry settings, environment variables and built in dotnet settings management. Depending on where you deploy your application there are also options such as kubernetes key stores and hashicorp vault.","sidebar":"tutorialSidebar"},"overview/why-fig":{"id":"overview/why-fig","title":"Why Fig?","description":"If you have ever created a service or other application, you probably found at some stage you needed to add some configurable components. This is particularly the case if the application could be deployed into multiple environments.","sidebar":"tutorialSidebar"},"security":{"id":"security","title":"Security Features","description":"Fig has a number of security features to ensure your settings remain safe.","sidebar":"tutorialSidebar"}}}')}}]);