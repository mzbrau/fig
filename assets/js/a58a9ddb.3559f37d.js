"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[6505],{7951:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"features/environment-variables","title":"Environment Variables","description":"Fig reads a number of environment variables. Some are required for base functionality while others can be used to override setting configuration without having to made code changes.","source":"@site/versioned_docs/version-2.0/features/24-environment-variables.md","sourceDirName":"features","slug":"/features/environment-variables","permalink":"/docs/features/environment-variables","draft":false,"unlisted":false,"editUrl":"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/versioned_docs/version-2.0/features/24-environment-variables.md","tags":[],"version":"2.0","sidebarPosition":24,"frontMatter":{"sidebar_position":24,"sidebar_label":"Environment Variables"},"sidebar":"tutorialSidebar","previous":{"title":"Client Settings Overrides","permalink":"/docs/features/client-settings-override"},"next":{"title":"App.config File Generation","permalink":"/docs/features/app-config-generation"}}');var r=n(4848),s=n(8453);const d={sidebar_position:24,sidebar_label:"Environment Variables"},o="Environment Variables",c={},a=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"environment-variables",children:"Environment Variables"})}),"\n",(0,r.jsx)(t.p,{children:"Fig reads a number of environment variables. Some are required for base functionality while others can be used to override setting configuration without having to made code changes."}),"\n",(0,r.jsx)(t.p,{children:"The following environment variables are available:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Category"}),(0,r.jsx)(t.th,{children:"Function"}),(0,r.jsx)(t.th,{children:"Format"}),(0,r.jsx)(t.th,{children:"Example"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Mandatory - Basic Function"}),(0,r.jsx)(t.td,{children:"Specifies the location of the Fig API so the client knows where it should contact."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_API_URI"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_API_URI=http://localhost:7281"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Setting Configuration"}),(0,r.jsx)(t.td,{children:"Overrides the group attribute for a specific setting."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_[SettingName]_GROUP"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_MYSETTING_GROUP = MyGroup"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Setting Configuration"}),(0,r.jsx)(t.td,{children:"Overrides the Validation Regex attribute for a specific setting"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_[SettingName]_VALIDATIONREGEX"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_MYSETTING_VALIDATIONREGEX = \\d"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Setting Configuration"}),(0,r.jsx)(t.td,{children:"Overrides the Validation Explanation attribute for a specific setting"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_[SettingName]_VALIDATIONEXPLANATION"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_MYSETTING_VALIDATIONEXPLANATION = Number"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Setting Configuration"}),(0,r.jsx)(t.td,{children:"Overrides the lookup table key attribute for a specific setting"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_[SettingName]_LOOKUPTABLEKEY"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_MYSETTING_LOOKUPTABLEKEY = MyLookup"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Client Configuration"}),(0,r.jsx)(t.td,{children:"Sets the instance that this client should attempt to read. If instance does not exist, it will get the base settings."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_[CLIENTNAME]_INSTANCE"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_MYCLIENT_INSTANCE = MyInstance"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Client Configuration"}),(0,r.jsx)(t.td,{children:"Overrides the poll interval that will be used to poll the API for updates"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_POLL_INTERVAL_MS"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_POLL_INTERVAL_MS = 30000"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Client Configuration"}),(0,r.jsx)(t.td,{children:"Overrides the classification of the setting"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_[SettingName]_CLASSIFICATION"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"FIG_MYSETTING_CLASSIFICATION = Functional"})})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(6540);const r={},s=i.createContext(r);function d(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);