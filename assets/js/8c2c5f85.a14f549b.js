"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[5737],{13521:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"features/client-secrets/aws-secret-provider","title":"Fig AWS Secret Provider","description":"This integration has not been well tested and may contain bugs. Please report any bugs to the GitHub repo","source":"@site/docs/features/28-client-secrets/5-aws-secret-provider.md","sourceDirName":"features/28-client-secrets","slug":"/features/client-secrets/aws-secret-provider","permalink":"/docs/next/features/client-secrets/aws-secret-provider","draft":false,"unlisted":false,"editUrl":"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/docs/features/28-client-secrets/5-aws-secret-provider.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"sidebar_label":"AWS Client Secret Provider"},"sidebar":"tutorialSidebar","previous":{"title":"Azure Client Secret Provider","permalink":"/docs/next/features/client-secrets/azure-secret-provider"},"next":{"title":"Google Cloud Client Secret Provider","permalink":"/docs/next/features/client-secrets/google-secret-provider"}}');var i=r(74848),t=r(28453);const o={sidebar_position:5,sidebar_label:"AWS Client Secret Provider"},a="Fig AWS Secret Provider",l={},c=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage with Default Credentials",id:"basic-usage-with-default-credentials",level:3},{value:"Secret Naming Convention",id:"secret-naming-convention",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Required AWS Permissions",id:"required-aws-permissions",level:2},{value:"Error Handling",id:"error-handling",level:2},{value:"Best Practices",id:"best-practices",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"fig-aws-secret-provider",children:"Fig AWS Secret Provider"})}),"\n",(0,i.jsx)(n.admonition,{title:"Experimental",type:"warning",children:(0,i.jsx)(n.p,{children:"This integration has not been well tested and may contain bugs. Please report any bugs to the GitHub repo"})}),"\n",(0,i.jsx)(n.p,{children:"This package provides AWS Secrets Manager integration for Fig client secret management using managed identity authentication."}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Managed Identity Support"}),": Uses AWS SDK's default credential chain (IAM roles, instance profiles, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Automatic Secret Creation"}),": Secrets are only auto-created if the environment variable ",(0,i.jsx)(n.code,{children:"ASPNETCORE_ENVIRONMENT"})," or ",(0,i.jsx)(n.code,{children:"DOTNET_ENVIRONMENT"})," is set to ",(0,i.jsx)(n.code,{children:"Development"}),". In all other environments, secrets must already exist or a ",(0,i.jsx)(n.code,{children:"SecretNotFoundException"})," will be thrown."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Thread-Safe"}),": Safe for concurrent use across multiple threads"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Retry Logic"}),": Built-in exponential backoff for transient errors"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resource Management"}),": Implements IDisposable for proper cleanup"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"dotnet add package Fig.Client.SecretProvider.Aws\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"basic-usage-with-default-credentials",children:"Basic Usage with Default Credentials"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'\nbuilder.Configuration.SetBasePath(GetBasePath())\n    .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)\n    .AddFig<Settings>(options =>\n    {\n        options.ClientName = "AspNetApi";\n        options.LoggerFactory = loggerFactory;\n        options.CommandLineArgs = args;\n        options.ClientSecretProviders = [new AwsSecretProvider(RegionEndpoint.USEast1)]\n    });\n'})}),"\n",(0,i.jsx)(n.h2,{id:"secret-naming-convention",children:"Secret Naming Convention"}),"\n",(0,i.jsxs)(n.p,{children:["Secrets are stored in AWS Secrets Manager using the format: ",(0,i.jsx)(n.code,{children:"FIG_{CLIENT_NAME}_SECRET"})]}),"\n",(0,i.jsxs)(n.p,{children:['For example, if your client name is "MyService", the secret will be named: ',(0,i.jsx)(n.code,{children:"FIG_MYSERVICE_SECRET"})]}),"\n",(0,i.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,i.jsx)(n.p,{children:"This provider uses the AWS SDK's default credential chain, which checks for credentials in the following order:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Environment variables (",(0,i.jsx)(n.code,{children:"AWS_ACCESS_KEY_ID"}),", ",(0,i.jsx)(n.code,{children:"AWS_SECRET_ACCESS_KEY"}),", ",(0,i.jsx)(n.code,{children:"AWS_SESSION_TOKEN"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["AWS credentials file (",(0,i.jsx)(n.code,{children:"~/.aws/credentials"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"IAM roles for Amazon EC2 instances"}),"\n",(0,i.jsx)(n.li,{children:"IAM roles for Amazon ECS tasks"}),"\n",(0,i.jsx)(n.li,{children:"IAM roles for AWS Lambda functions"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"required-aws-permissions",children:"Required AWS Permissions"}),"\n",(0,i.jsx)(n.p,{children:"The IAM role or user must have the following permissions:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Effect": "Allow",\n            "Action": [\n                "secretsmanager:GetSecretValue",\n                "secretsmanager:CreateSecret",\n                "secretsmanager:DescribeSecret"\n            ],\n            "Resource": "arn:aws:secretsmanager:*:*:secret:FIG_*"\n        }\n    ]\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In non-development environments, secrets are never auto-created, so you only need the ",(0,i.jsx)(n.code,{children:"GetSecretValue"})," permission."]}),"\n",(0,i.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(n.p,{children:"The provider handles common AWS errors gracefully:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ResourceNotFoundException"}),": Thrown when a secret doesn't exist and the environment is not ",(0,i.jsx)(n.code,{children:"Development"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transient Errors"}),": Automatically retried with exponential backoff"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Concurrent Creation"}),": Handles race conditions when multiple instances try to create the same secret"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Managed Identity"}),": Deploy to AWS services (EC2, ECS, Lambda) with appropriate IAM roles"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Least Privilege"}),": Grant only the minimum required permissions"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Resource Cleanup"}),": Dispose the provider when your application shuts down"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Monitoring"}),": Log and monitor for ",(0,i.jsx)(n.code,{children:"SecretNotFoundException"})," and permission errors"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"No AutoCreate in Production"}),": In production and all non-development environments, secrets will not be auto-created."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(96540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);