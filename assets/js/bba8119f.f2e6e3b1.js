"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[7471],{110:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"features/client-secrets/azure-secret-provider","title":"Fig Azure Client Secret Provider","description":"This integration has not been well tested and may contain bugs. Please report any bugs to the GitHub repo","source":"@site/versioned_docs/version-2.0/features/28-client-secrets/4-azure-secret-provider.md","sourceDirName":"features/28-client-secrets","slug":"/features/client-secrets/azure-secret-provider","permalink":"/docs/features/client-secrets/azure-secret-provider","draft":false,"unlisted":false,"editUrl":"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/versioned_docs/version-2.0/features/28-client-secrets/4-azure-secret-provider.md","tags":[],"version":"2.0","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Azure Client Secret Provider"},"sidebar":"tutorialSidebar","previous":{"title":"Default Client Secret Provider","permalink":"/docs/features/client-secrets/dpapi-secret-provider"},"next":{"title":"AWS Client Secret Provider","permalink":"/docs/features/client-secrets/aws-secret-provider"}}');var i=r(74848),s=r(28453);const o={sidebar_position:4,sidebar_label:"Azure Client Secret Provider"},a="Fig Azure Client Secret Provider",c={},l=[{value:"Features",id:"features",level:2},{value:"Usage",id:"usage",level:2},{value:"Auto-Creation Behavior",id:"auto-creation-behavior",level:2}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"fig-azure-client-secret-provider",children:"Fig Azure Client Secret Provider"})}),"\n",(0,i.jsx)(t.admonition,{title:"Experimental",type:"warning",children:(0,i.jsx)(t.p,{children:"This integration has not been well tested and may contain bugs. Please report any bugs to the GitHub repo"})}),"\n",(0,i.jsxs)(t.p,{children:["This package provides an Azure Key Vault implementation of the ",(0,i.jsx)(t.code,{children:"IClientSecretProvider"})," interface for Fig configuration management."]}),"\n",(0,i.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Thread-Safe"}),": Uses semaphore-based locking to prevent race conditions when multiple instances try to create the same secret"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Race Condition Protection"}),': Implements "check-then-act" pattern with proper synchronization']}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Retry Logic"}),": Handles transient failures with exponential backoff"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Conflict Resolution"}),": Gracefully handles concurrent secret creation attempts"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Managed Identity Support"}),": Uses ",(0,i.jsx)(t.code,{children:"DefaultAzureCredential"})," for seamless authentication in Azure environments"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Automatic Secret Creation"}),": Secrets are only auto-created if the environment variable ",(0,i.jsx)(t.code,{children:"ASPNETCORE_ENVIRONMENT"})," or ",(0,i.jsx)(t.code,{children:"DOTNET_ENVIRONMENT"})," is set to ",(0,i.jsx)(t.code,{children:"Development"}),". In all other environments, secrets must already exist or a ",(0,i.jsx)(t.code,{children:"SecretNotFoundException"})," will be thrown."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",children:'builder.Configuration.SetBasePath(GetBasePath())\n    .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)\n    .AddFig<Settings>(options =>\n    {\n        options.ClientName = "AspNetApi";\n        options.LoggerFactory = loggerFactory;\n        options.CommandLineArgs = args;\n        options.ClientSecretProviders = [new AzureSecretProvider("https://your-keyvault.vault.azure.net/")]\n    });\n'})}),"\n",(0,i.jsx)(t.h2,{id:"auto-creation-behavior",children:"Auto-Creation Behavior"}),"\n",(0,i.jsxs)(t.p,{children:["Secrets are only auto-created if the environment variable ",(0,i.jsx)(t.code,{children:"ASPNETCORE_ENVIRONMENT"})," or ",(0,i.jsx)(t.code,{children:"DOTNET_ENVIRONMENT"})," is set to ",(0,i.jsx)(t.code,{children:"Development"}),". In all other environments, secrets must already exist or a ",(0,i.jsx)(t.code,{children:"SecretNotFoundException"})," will be thrown."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var n=r(96540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);