"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[5695],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),g=r,m=d["".concat(o,".").concat(g)]||d[g]||p[g]||i;return n?a.createElement(m,s(s({ref:t},c),{},{components:n})):a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=g;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[d]="string"==typeof e?e:r,s[1]=l;for(var u=2;u<i;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3675:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:10},s="Data Grids",l={unversionedId:"features/settings-management/data-grids",id:"features/settings-management/data-grids",title:"Data Grids",description:"Fig supports data grids for displaying complex settings.",source:"@site/docs/features/settings-management/data-grids.md",sourceDirName:"features/settings-management",slug:"/features/settings-management/data-grids",permalink:"/docs/features/settings-management/data-grids",draft:!1,editUrl:"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/docs/features/settings-management/data-grids.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Verification",permalink:"/docs/features/settings-management/verification"},next:{title:"Dependent Settings",permalink:"/docs/features/settings-management/dependent-settings"}},o={},u=[{value:"Usage",id:"usage",level:2},{value:"Locking Data Grids",id:"locking-data-grids",level:3},{value:"Internal Attributes",id:"internal-attributes",level:3},{value:"Default Values",id:"default-values",level:3},{value:"Appearance",id:"appearance",level:2}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-grids"},"Data Grids"),(0,r.kt)("p",null,"Fig supports data grids for displaying complex settings."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"The following setting will result in a data grid with 3 columns, one for each property within the class. Items can be added, removed or edited as required."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Animals")]\npublic List<Animal> Animals { get; set; }\n\npublic class Animal\n{\n    public string Name { get; set; }\n\n    public int Legs { get; set; }\n\n    public string FavouriteFood { get; set; }\n}\n')),(0,r.kt)("p",null,"You can also create a data grid from a list of base types, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Names")]\npublic List<string> Names { get; set; }\n')),(0,r.kt)("h3",{id:"locking-data-grids"},"Locking Data Grids"),(0,r.kt)("p",null,"Data grids can also be locked. This prevents rows being added or removed. Existing rows can still be edited. To lock a data grid, used the ",(0,r.kt)("strong",{parentName:"p"},"DataGridLocked")," attribute."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Animals")]\n[DataGridLocked]\npublic List<Animal> Animals { get; set; }\n')),(0,r.kt)("h3",{id:"internal-attributes"},"Internal Attributes"),(0,r.kt)("p",null,"Some attributes can also be used on the internal class including ",(0,r.kt)("a",{parentName:"p",href:"https://www.figsettings.com/docs/features/settings-management/multiline"},"MultiLine")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.figsettings.com/docs/features/settings-management/valid-values"},"ValidValues"),". These work in the same way that they do on regular properties. In addition, there is a ReadOnly attributes which makes that column read only when editing the data grid."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Animals")]\npublic List<Animal> Animals { get; set; }\n\npublic class Animal\n{\n    [ReadOnly]\n    public string Name { get; set; }\n\n    [ValidValues("1", "2", "3")]\n    public int Legs { get; set; }\n\n    [MultiLine(3)]\n    public string FavouriteFood { get; set; }\n}\n')),(0,r.kt)("h3",{id:"default-values"},"Default Values"),(0,r.kt)("p",null,"Data grids support default values but as they are complex objects, they cannot be specified within the attribute. To specify a default value, create a static class and reference it within the setting attribute. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Animals", defaultValueMethodName: "GetAnimals")]\npublic List<Animal> Animals { get; set; }\n\npublic static List<Animal> GetAnimals()\n{\n    return new List<Animal>()\n    {\n        new Animal\n        {\n            Name = "Fluffy",\n            Legs = 2,\n            FavouriteFood = "carrots"\n        },\n        new Animal()\n        {\n            Name = "Rover",\n            Legs = 4,\n            FavouriteFood = "steak"\n        }\n    };\n}\n')),(0,r.kt)("h2",{id:"appearance"},"Appearance"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"C:%5CDevelopment%5CSideProjects%5Cfig%5Cdoc%5Cfig-documentation%5Cstatic%5Cimg%5Cimage-20230824212148560.png",alt:"image-20230824212148560"})))}p.isMDXComponent=!0}}]);