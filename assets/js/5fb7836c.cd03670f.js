"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[5695],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(a),g=i,m=d["".concat(o,".").concat(g)]||d[g]||p[g]||r;return a?n.createElement(m,s(s({ref:t},c),{},{components:a})):n.createElement(m,s({ref:t},c))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=g;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[d]="string"==typeof e?e:i,s[1]=l;for(var u=2;u<r;u++)s[u]=a[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},3675:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var n=a(7462),i=(a(7294),a(3905));const r={sidebar_position:10},s="Data Grids",l={unversionedId:"features/settings-management/data-grids",id:"features/settings-management/data-grids",title:"Data Grids",description:"Fig supports data grids for displaying complex settings.",source:"@site/docs/features/settings-management/data-grids.md",sourceDirName:"features/settings-management",slug:"/features/settings-management/data-grids",permalink:"/docs/features/settings-management/data-grids",draft:!1,editUrl:"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/docs/features/settings-management/data-grids.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Verification",permalink:"/docs/features/settings-management/verification"},next:{title:"Dependent Settings",permalink:"/docs/features/settings-management/dependent-settings"}},o={},u=[{value:"Usage",id:"usage",level:2},{value:"Locking Data Grids",id:"locking-data-grids",level:3},{value:"Internal Attributes",id:"internal-attributes",level:3},{value:"Default Values",id:"default-values",level:3},{value:"Appearance",id:"appearance",level:2}],c={toc:u},d="wrapper";function p(e){let{components:t,...a}=e;return(0,i.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"data-grids"},"Data Grids"),(0,i.kt)("p",null,"Fig supports data grids for displaying complex settings."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"The following setting will result in a data grid with 3 columns, one for each property within the class. Items can be added, removed or edited as required."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Animals")]\npublic List<Animal> Animals { get; set; }\n\npublic class Animal\n{\n    public string Name { get; set; }\n\n    public int Legs { get; set; }\n\n    public string FavouriteFood { get; set; }\n}\n')),(0,i.kt)("p",null,"You can also create a data grid from a list of base types, for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Names")]\npublic List<string> Names { get; set; }\n')),(0,i.kt)("h3",{id:"locking-data-grids"},"Locking Data Grids"),(0,i.kt)("p",null,"Data grids can also be locked. This prevents rows being added or removed. Existing rows can still be edited. To lock a data grid, used the ",(0,i.kt)("strong",{parentName:"p"},"DataGridLocked")," attribute."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Animals")]\n[DataGridLocked]\npublic List<Animal> Animals { get; set; }\n')),(0,i.kt)("h3",{id:"internal-attributes"},"Internal Attributes"),(0,i.kt)("p",null,"Some attributes can also be used on the internal class including ",(0,i.kt)("a",{parentName:"p",href:"https://www.figsettings.com/docs/features/settings-management/multiline"},"MultiLine"),",  ",(0,i.kt)("a",{parentName:"p",href:"https://www.figsettings.com/docs/features/settings-management/valid-values"},"ValidValues"),", and ",(0,i.kt)("a",{parentName:"p",href:"http://www.figsettings.com/docs/features/settings-management/validation"},"Validation"),". These work in the same way that they do on regular properties. In addition, there is a ReadOnly attributes which makes that column read only when editing the data grid."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Animals")]\npublic List<Animal> Animals { get; set; }\n\npublic class Animal\n{\n    [ReadOnly]\n    public string Name { get; set; }\n\n    [ValidValues("1", "2", "3")]\n    public int Legs { get; set; }\n\n      [MultiLine(3)]\n    [Validation(ValidationType.NotEmpty)]\n    public string FavouriteFood { get; set; }\n}\n')),(0,i.kt)("h3",{id:"default-values"},"Default Values"),(0,i.kt)("p",null,"Data grids support default values but as they are complex objects, they cannot be specified within the attribute. To specify a default value, create a static class and reference it within the setting attribute. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[Setting("Favourite Animals", defaultValueMethodName: "GetAnimals")]\npublic List<Animal> Animals { get; set; }\n\npublic static List<Animal> GetAnimals()\n{\n    return new List<Animal>()\n    {\n        new Animal\n        {\n            Name = "Fluffy",\n            Legs = 2,\n            FavouriteFood = "carrots"\n        },\n        new Animal()\n        {\n            Name = "Rover",\n            Legs = 4,\n            FavouriteFood = "steak"\n        }\n    };\n}\n')),(0,i.kt)("h2",{id:"appearance"},"Appearance"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"C:%5CDevelopment%5CSideProjects%5Cfig%5Cdoc%5Cfig-documentation%5Cstatic%5Cimg%5Cimage-20230824212148560.png",alt:"image-20230824212148560"})))}p.isMDXComponent=!0}}]);