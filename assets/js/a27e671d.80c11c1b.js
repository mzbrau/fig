"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[2824],{5745:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"features/client-secrets/dpapi-secret-provider","title":"Fig DPAPI Secret Provider","description":"This provider enables Fig client secret management using Windows DPAPI (Data Protection API), designed for use on Windows systems.","source":"@site/docs/features/28-client-secrets/3-dpapi-secret-provider.md","sourceDirName":"features/28-client-secrets","slug":"/features/client-secrets/dpapi-secret-provider","permalink":"/docs/features/client-secrets/dpapi-secret-provider","draft":false,"unlisted":false,"editUrl":"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/docs/features/28-client-secrets/3-dpapi-secret-provider.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Default Client Secret Provider"},"sidebar":"tutorialSidebar","previous":{"title":"Docker Client Secret Provider","permalink":"/docs/features/client-secrets/docker-secret-provider"},"next":{"title":"Azure Client Secret Provider","permalink":"/docs/features/client-secrets/azure-secret-provider"}}');var i=n(4848),s=n(8453);const o={sidebar_position:3,sidebar_label:"Default Client Secret Provider"},a="Fig DPAPI Secret Provider",c={},l=[{value:"Features",id:"features",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Secret Naming Convention",id:"secret-naming-convention",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Example: Creating a DPAPI Secret via PowerShell",id:"example-creating-a-dpapi-secret-via-powershell",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"fig-dpapi-secret-provider",children:"Fig DPAPI Secret Provider"})}),"\n",(0,i.jsx)(r.p,{children:"This provider enables Fig client secret management using Windows DPAPI (Data Protection API), designed for use on Windows systems."}),"\n",(0,i.jsx)(r.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Windows-Only"}),": Automatically enabled on Windows platforms."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Automatic Secret Creation"}),": Secrets are auto-created if not present, unless auto-creation is disabled."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Environment Variable Storage"}),": Stores secrets as encrypted environment variables, using DPAPI for encryption."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Thread-Safe"}),": Safe for concurrent use."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Graceful Error Handling"}),": Handles decryption and environment errors with clear exceptions."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"dotnet add package Fig.Client.SecretProvider.Dpapi\n"})}),"\n",(0,i.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(r.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:'builder.Configuration.SetBasePath(GetBasePath())\n    .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)\n    .AddFig<Settings>(options =>\n    {\n        options.ClientName = "AspNetApi";\n        options.LoggerFactory = loggerFactory;\n        options.CommandLineArgs = args;\n        options.ClientSecretProviders = [new DpapiSecretProvider()];\n    });\n'})}),"\n",(0,i.jsx)(r.h2,{id:"secret-naming-convention",children:"Secret Naming Convention"}),"\n",(0,i.jsxs)(r.p,{children:["Secrets are stored as environment variables using the format: ",(0,i.jsx)(r.code,{children:"FIG_{CLIENT_NAME}_SECRET"})," (uppercase, no spaces).\nFor example, for client name ",(0,i.jsx)(r.code,{children:"MyService"}),", the environment variable will be ",(0,i.jsx)(r.code,{children:"FIG_MYSERVICE_SECRET"}),"."]}),"\n",(0,i.jsx)(r.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["The provider attempts to read the secret from the environment variable ",(0,i.jsx)(r.code,{children:"FIG_{CLIENT_NAME}_SECRET"}),"."]}),"\n",(0,i.jsx)(r.li,{children:"If the variable exists, it is decrypted using DPAPI (CurrentUser scope)."}),"\n",(0,i.jsx)(r.li,{children:"If the variable does not exist and auto-creation is enabled, a new GUID is generated, encrypted, and set as the environment variable for the current process."}),"\n",(0,i.jsxs)(r.li,{children:["If the variable cannot be found and auto-creation is disabled, a ",(0,i.jsx)(r.code,{children:"SecretNotFoundException"})," is thrown."]}),"\n",(0,i.jsxs)(r.li,{children:["If decryption fails (e.g., due to user mismatch or corruption), a ",(0,i.jsx)(r.code,{children:"SecretNotFoundException"})," is thrown with instructions for manual creation."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Set Environment Variables Securely"}),": Use deployment scripts or CI/CD pipelines to set the encrypted environment variable for the correct user."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"User Context"}),": Ensure the application and the tool used to encrypt the secret run as the same Windows user."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"No AutoCreate in Production"}),": For production, pre-set the environment variable and disable auto-creation."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Monitor for Errors"}),": Log and monitor for missing or decryption errors."]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"example-creating-a-dpapi-secret-via-powershell",children:"Example: Creating a DPAPI Secret via PowerShell"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-powershell",children:'$scope = [System.Security.Cryptography.DataProtectionScope]::CurrentUser\n$secret = [System.Text.Encoding]::UTF8.GetBytes("<YOUR CLIENT SECRET HERE>")\n$protected = [System.Security.Cryptography.ProtectedData]::Protect($secret, $null, $scope)\n$encodedText = [Convert]::ToBase64String($protected)\nWrite-Host $encodedText\n# Set the environment variable (for current process)\n[System.Environment]::SetEnvironmentVariable("FIG_MYSERVICE_SECRET", $encodedText, "User")\n'})}),"\n",(0,i.jsxs)(r.p,{children:["You can also use the ",(0,i.jsx)(r.code,{children:"dpapi"})," tool available from the Fig repository to generate and set secrets. See ",(0,i.jsx)(r.a,{href:"/docs/guides/encrypting-secrets-dpapi",children:"Encrypting Secrets DPAPI"})," for details."]})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var t=n(6540);const i={},s=t.createContext(i);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);