"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[3976],{2053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"intro","title":"Introduction","description":"To get up and running with Fig, you\'ll need to set up the API, Web and integrate the Fig.Client nuget package into your application.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Client Configuration","permalink":"/docs/client-configuration"}}');var s=t(4848),r=t(8453);const o={sidebar_position:1},a="Introduction",l={},c=[{value:"Install API and Web Client",id:"install-api-and-web-client",level:2},{value:"Log in to Web Client",id:"log-in-to-web-client",level:2},{value:"Integrate Client",id:"integrate-client",level:2},{value:"Example Setup using WSL",id:"example-setup-using-wsl",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,s.jsx)("iframe",{width:"100%",height:"450",src:"https://www.youtube.com/embed/-2Bth4m0RcM?si=VKaqJBLBLMdFKRLH",title:"15 new features in Fig 2.0",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),"\n",(0,s.jsx)(n.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsxs)(n.p,{children:["To get up and running with Fig, you'll need to set up the API, Web and integrate the ",(0,s.jsx)(n.code,{children:"Fig.Client"})," nuget package into your application."]}),"\n",(0,s.jsx)(n.h2,{id:"install-api-and-web-client",children:"Install API and Web Client"}),"\n",(0,s.jsx)(n.p,{children:"The API and Web Clients can be installed using Docker. This guide assumes docker is installed and running."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Clone the ",(0,s.jsx)(n.a,{href:"https://github.com/mzbrau/fig",children:"fig repository"})," and use the ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," file included."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open a terminal / command prompt, navigate to the directory containing the docker-compose file and type ",(0,s.jsx)(n.code,{children:"docker-compose up"})," to download the containers and run them."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"log-in-to-web-client",children:"Log in to Web Client"}),"\n",(0,s.jsxs)(n.p,{children:["Navigate to ",(0,s.jsx)(n.code,{children:"http://localhost:7148"})," and at the login prompt enter user: ",(0,s.jsx)(n.code,{children:"admin"})," password: ",(0,s.jsx)(n.code,{children:"admin"}),". You should see the administration view of fig with all options available."]}),"\n",(0,s.jsx)(n.h2,{id:"integrate-client",children:"Integrate Client"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["In this guide, we'll create an ASP.NET project from scratch and integrate the ",(0,s.jsx)(n.code,{children:"Fig.Client"})," to use fig for configuration. However the same instructions apply if you have an existing project. Just skip the project creation."]})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Create new ASP.NET project"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet new webapi\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Open the project in your favourite IDE"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/Fig.Client",children:"Fig.Client"})})," nuget package. You might want to add a secret provider nuget package too"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a new class to hold your application settings, extending the SettingsBase class. For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class ExampleSettings : SettingsBase\n{\n    public override string ClientName => "ExampleService";\n\n    [Setting("My favourite animal")]\n    public string FavouriteAnimal { get; set; } = "Cow"\n\n    [Setting("My favourite number")]\n    public int FavouriteNumber { get; set; } = 66;\n    \n    [Setting("True or false, your choice...")]\n    public bool TrueOrFalse { get; set; } = true;\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Register Fig as a configuration provider in the ",(0,s.jsx)(n.code,{children:"program.cs"})," file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'builder.Configuration.SetBasePath(GetBasePath())\n .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)\n .AddFig<Settings>(options =>\n {\n     options.ClientName = "AspNetApi";\n     options.LoggerFactory = loggerFactory;\n     options.CommandLineArgs = args;\n     //options.ClientSecretProviders = [new DockerSecretProvider(), new DpapiSecretProvider()]; // if you added a secret provider\n     o.ClientSecretOverride = "be633c90474448c382c47045b2e172d5xx"; // not for production use, use a secret provider\n });\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Register Fig with the host:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"builder.Host.UseFig<Settings>();\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"7",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Access the settings via the ",(0,s.jsx)(n.code,{children:"IOptions"})," or ",(0,s.jsx)(n.code,{children:"IOptionsMonitor"})," interface. E.g."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public WeatherForecastController(IOptionsMonitor<ExampleSettings> settings)\n{\n    _settings = settings;\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add an environment variable called ",(0,s.jsx)(n.code,{children:"FIG_API_URI"})," with the URI of the Fig API. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"FIG_API_URI=https://localhost:7281\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Add a client secret (see ",(0,s.jsx)(n.a,{href:"/docs/features/client-secrets/client-secret-providers",children:"Client Secrets"})," section for details on how to do that)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["See the ",(0,s.jsx)(n.strong,{children:"examples folder"})," in the source repository for more examples."]}),"\n",(0,s.jsx)(n.h2,{id:"example-setup-using-wsl",children:"Example Setup using WSL"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"fig-local-machine-setup.excalidraw",src:t(3848).A+"",width:"1634",height:"779"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},3848:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/fig-local-machine-setup.excalidraw-d581e7926ace2cfe0edb4b0f241cf35d.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);