"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[716],{3602:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"features/verifications","title":"Verifications","description":"Fig includes a framework for verifying setting values from within the UI. The setting verifications occur within the Fig API.","source":"@site/docs/features/verifications.md","sourceDirName":"features","slug":"/features/verifications","permalink":"/docs/features/verifications","draft":false,"unlisted":false,"editUrl":"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/docs/features/verifications.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Nested Settings","permalink":"/docs/features/settings-management/nested-settings"},"next":{"title":"Event History","permalink":"/docs/features/event-history"}}');var s=t(4848),r=t(8453);const a={sidebar_position:4},c="Verifications",o={},d=[{value:"Usage",id:"usage",level:3},{value:"Example",id:"example",level:3}];function u(e){const i={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"verifications",children:"Verifications"})}),"\n",(0,s.jsx)(i.p,{children:"Fig includes a framework for verifying setting values from within the UI. The setting verifications occur within the Fig API."}),"\n",(0,s.jsx)(i.p,{children:"Verifications are defined in a dll file placed in a folder called 'plugins' within the base directory of the API."}),"\n",(0,s.jsxs)(i.p,{children:["The plugin definition must implement in the ",(0,s.jsx)(i.code,{children:"ISettingVerifier"})," interface which is defined in the ",(0,s.jsx)(i.code,{children:"Fig.Api.SettingVerification.Sdk"})," project. Verifiers can recieve the values of more than one setting which are passed in as a list of object params into the verifier."]}),"\n",(0,s.jsx)(i.p,{children:"Many verifications can be defined within the same assembly."}),"\n",(0,s.jsxs)(i.p,{children:["Fig comes with some built in plug in verifications including ",(0,s.jsx)(i.code,{children:"PingVerifier"})," and ",(0,s.jsx)(i.code,{children:"Rest200OkVerifier"}),"."]}),"\n",(0,s.jsx)(i.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-csharp",children:'[Verification("Rest200OkVerifier", nameof(WebsiteAddress))]\npublic class ProductService : SettingsBase\n{\n    public override string ClientName => "ProductService";\n\n    [Setting("This is the address of a website", "http://www.google.com")]\n    public string WebsiteAddress { get; set; }\n}\n'})}),"\n",(0,s.jsx)(i.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-csharp",children:'public class Rest200OkVerifier : ISettingVerifier\n{\n    public string Name => "Rest200OkVerifier";\n\n    public string Description =>\n        "Makes a GET request to the provided endpoint. " +\n        "Result is considered success if a status code 200 Ok response is received";\n    \n    public VerificationResult RunVerification(params object[] parameters)\n    {\n        if (parameters.Length != 1 || string.IsNullOrEmpty(parameters[0] as string))\n        {\n            return VerificationResult.IncorrectParameters();\n        }\n\n        var result = new VerificationResult();\n        var uri = parameters[0] as string;\n\n        using HttpClient client = new HttpClient();\n        \n        result.AddLog($"Performing get request to address: {uri}");\n        var requestResult = client.GetAsync(uri).Result;\n\n        if (requestResult.StatusCode == HttpStatusCode.OK)\n        {\n            result.Message = "Succeeded";\n            result.Success = true;\n            return result;\n        }\n    \n        result.AddLog($"Request failed. {requestResult.StatusCode}. {requestResult.ReasonPhrase}");\n        result.Message = $"Failed with response: {requestResult.StatusCode}";\n        return result;\n    }\n}\n'})})]})}function l(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>c});var n=t(6540);const s={},r=n.createContext(s);function a(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);