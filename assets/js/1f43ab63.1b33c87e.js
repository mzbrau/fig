"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[1577],{4076:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"features/settings-management/data-grids","title":"Data Grids","description":"Fig supports data grids for displaying complex settings.","source":"@site/docs/features/settings-management/5-data-grids.md","sourceDirName":"features/settings-management","slug":"/features/settings-management/data-grids","permalink":"/docs/features/settings-management/data-grids","draft":false,"unlisted":false,"editUrl":"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/docs/features/settings-management/5-data-grids.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Configuration Section","permalink":"/docs/features/settings-management/configuration-section"},"next":{"title":"Default Values","permalink":"/docs/features/settings-management/default-values"}}');var a=n(4848),i=n(8453);const r={sidebar_position:5},d="Data Grids",l={},o=[{value:"Usage",id:"usage",level:2},{value:"Locking Data Grids",id:"locking-data-grids",level:3},{value:"Internal Attributes",id:"internal-attributes",level:3},{value:"Default Values",id:"default-values",level:3},{value:"Appearance",id:"appearance",level:2},{value:"CSV Import and Export",id:"csv-import-and-export",level:2}];function c(e){const t={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"data-grids",children:"Data Grids"})}),"\n",(0,a.jsx)(t.p,{children:"Fig supports data grids for displaying complex settings."}),"\n",(0,a.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(t.p,{children:"The following setting will result in a data grid with 3 columns, one for each property within the class. Items can be added, removed or edited as required."}),"\n",(0,a.jsx)(t.p,{children:"For properties to be added they must:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Be public"}),"\n",(0,a.jsx)(t.li,{children:"Have a setter and a getter"}),"\n",(0,a.jsx)(t.li,{children:"Not be ignored"}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'[Setting("Favorite Animals")]\r\npublic List<Animal> Animals { get; set; }\r\n\r\npublic class Animal\r\n{\r\n    public string Name { get; set; }\r\n\r\n    public int Legs { get; set; }\r\n\r\n    public string FavoriteFood { get; set; }\r\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"You can also create a data grid from a list of base types, for example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'[Setting("Favorite Names")]\r\npublic List<string> Names { get; set; }\n'})}),"\n",(0,a.jsx)(t.h3,{id:"locking-data-grids",children:"Locking Data Grids"}),"\n",(0,a.jsxs)(t.p,{children:["Data grids can also be locked. This prevents rows being added or removed. Existing rows can still be edited. To lock a data grid, used the ",(0,a.jsx)(t.strong,{children:"DataGridLocked"})," attribute."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'[Setting("Favorite Animals")]\r\n[DataGridLocked]\r\npublic List<Animal> Animals { get; set; }\n'})}),"\n",(0,a.jsx)(t.h3,{id:"internal-attributes",children:"Internal Attributes"}),"\n",(0,a.jsxs)(t.p,{children:["Some attributes can also be used on the internal class including ",(0,a.jsx)(t.a,{href:"https://www.figsettings.com/docs/features/settings-management/multiline",children:"MultiLine"}),",  ",(0,a.jsx)(t.a,{href:"https://www.figsettings.com/docs/features/settings-management/valid-values",children:"ValidValues"}),", ",(0,a.jsx)(t.a,{href:"https://www.figsettings.com/docs/features/settings-management/secret-settings",children:"Secret"})," and ",(0,a.jsx)(t.a,{href:"http://www.figsettings.com/docs/features/settings-management/validation",children:"Validation"}),". These work in the same way that they do on regular properties. In addition, there is:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"[ReadOnly]"})," attribute which makes that column read only when editing the data grid."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"[FigIgnore]"})," attribute which does not add that property into fig. It will not be shown in the UI or set by Fig in any way."]}),"\n"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'[Setting("Favorite Animals")]\r\npublic List<Animal> Animals { get; set; }\r\n\r\npublic class Animal\r\n{\r\n    [ReadOnly]\r\n    public string Name { get; set; }\r\n\r\n    [ValidValues("1", "2", "3")]\r\n    public int Legs { get; set; }\r\n\r\n    [MultiLine(3)]\r\n    [Validation(ValidationType.NotEmpty)]\r\n    public string FavoriteFood { get; set; }\r\n\r\n    [Secret]\r\n    public string Password { get;set; }\r\n\r\n    [FigIgnore]\r\n    public string? MyOtherProperty { get; set; }\r\n\r\n    // Note valid values must be set for List<string> within a data grid. \r\n    // Only List<string> is supported, not other enumerable types.\r\n    [ValidValues("A", "B", "C")] \r\n    public List<string> Items { get; set; }\r\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"default-values",children:"Default Values"}),"\n",(0,a.jsx)(t.p,{children:"Data grids support default values but as they are complex objects, they cannot be specified within the attribute. To specify a default value, create a static class and reference it within the setting attribute. For example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'[Setting("Favorite Animals", defaultValueMethodName: nameof(GetAnimals))]\r\npublic List<Animal> Animals { get; set; }\r\n\r\npublic static List<Animal> GetAnimals()\r\n{\r\n    return new List<Animal>()\r\n    {\r\n        new Animal\r\n        {\r\n            Name = "Fluffy",\r\n            Legs = 2,\r\n            FavoriteFood = "carrots"\r\n        },\r\n        new Animal()\r\n        {\r\n            Name = "Rover",\r\n            Legs = 4,\r\n            FavoriteFood = "steak"\r\n        }\r\n    };\r\n}\n'})}),"\n",(0,a.jsx)(t.h2,{id:"appearance",children:"Appearance"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"image-20230824212148560",src:n(4188).A+"",width:"886",height:"336"})}),"\n",(0,a.jsx)(t.h2,{id:"csv-import-and-export",children:"CSV Import and Export"}),"\n",(0,a.jsx)(t.p,{children:"From Fig 2.0 it is possible to import and export data from Data Grids. Exported data is quoted to avoid problems with commas appearing in values."}),"\n",(0,a.jsx)(t.p,{children:"Import supports quoted data or unquoted data. If the data is invalid, feedback is provided on the reason for the rejected import."}),"\n",(0,a.jsx)(t.p,{children:"Imported settings need to be saved once the import is complete."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.img,{alt:"Import/Export DataGrid",src:n(7648).A+"",width:"1366",height:"321"}),(0,a.jsx)(t.br,{}),"\n",(0,a.jsx)(t.em,{children:"Import and export buttons sit above the data grid"})]}),"\n",(0,a.jsx)(t.p,{children:"The above table exports to:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csv",children:'"Name","Legs","FavouriteFood","Things"\r\n"spider","8","Insects","one,two"\r\n"horse","4","Hay","three"\n'})})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},4188:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/image-20230824212148560-c178b61fe4e0cb1005efa7f4f3d53b8d.png"},7648:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/import-export-data-grid-a20b338c9f1a4d45e2ef814a2d47b94f.png"},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var s=n(6540);const a={},i=s.createContext(a);function r(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);