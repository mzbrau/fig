"use strict";(self.webpackChunkfig_documentation=self.webpackChunkfig_documentation||[]).push([[2790],{5060:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"features/settings-management/nested-settings","title":"Nested Settings","description":"This feature was introduced in Fig v0.11.","source":"@site/docs/features/settings-management/13-nested-settings.md","sourceDirName":"features/settings-management","slug":"/features/settings-management/nested-settings","permalink":"/docs/next/features/settings-management/nested-settings","draft":false,"unlisted":false,"editUrl":"https://github.com/mzbrau/fig/tree/main/doc/fig-documentation/docs/features/settings-management/13-nested-settings.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Multi-Line Strings","permalink":"/docs/next/features/settings-management/multiline"},"next":{"title":"Ordering","permalink":"/docs/next/features/settings-management/ordering"}}');var s=t(4848),r=t(8453);const l={sidebar_position:13},a="Nested Settings",d={},c=[{value:"Usage",id:"usage",level:2},{value:"Attribute Inheritance",id:"attribute-inheritance",level:2},{value:"Inheritable Attributes",id:"inheritable-attributes",level:3},{value:"Attribute Override",id:"attribute-override",level:3},{value:"Multi-Level Inheritance",id:"multi-level-inheritance",level:3},{value:"Appearance",id:"appearance",level:2}];function o(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"nested-settings",children:"Nested Settings"})}),"\n",(0,s.jsx)(n.admonition,{title:"Note",type:"info",children:(0,s.jsx)(n.p,{children:"This feature was introduced in Fig v0.11."})}),"\n",(0,s.jsx)(n.p,{children:"Application settings are often best modeled as a number of nested classes, this provides a number of advantages including:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Settings can be locally grouped with related settings"}),"\n",(0,s.jsx)(n.li,{children:"Setting classes can be reused between multiple components"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Fig supports this configuration with the concept of Nested Settings."}),"\n",(0,s.jsx)(n.p,{children:"Settings are ordered in the same order they appear in the settings class."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'\npublic class ConsoleSettings : SettingsBase\n{\n    public override string ClientDescription => "Example of nested settings";\n\n    [NestedSetting]\n    public MessageBus? MessageBus { get; set; }\n    \n    [Setting("a timeout in milliseconds")]\n    public double TimeoutMs { get; set; }\n    \n    [NestedSetting]\n    public Database Database { get; set; }\n\n    public override void Validate(ILogger logger)\n    {\n        //Perform validation here.\n        SetConfigurationErrorStatus(false);\n    }\n}\n\npublic class MessageBus\n{\n    [Setting("a message bus uri")]\n    public string? Uri { get; set; }\n    \n    [NestedSetting]\n    public Authorization? Auth { get; set; }\n}\n\npublic class Authorization\n{\n    [Setting("a message bus user")]\n    public string Username { get; set; } = "User1";\n    \n    [Setting("a message bus password")]\n    public string? Password { get; set; }\n}\n\npublic class Database\n{\n    [Setting("a database connection string")]\n    public string? ConnectionString { get; set; }\n    \n    [Setting("a database timeout")]\n    public int TimeoutMs { get; set; }\n}\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"attribute-inheritance",children:"Attribute Inheritance"}),"\n",(0,s.jsxs)(n.p,{children:["Fig supports attribute inheritance for nested settings. When you apply certain attributes to a property marked with ",(0,s.jsx)(n.code,{children:"[NestedSetting]"}),", those attributes are automatically inherited by all child properties within the nested class."]}),"\n",(0,s.jsx)(n.h3,{id:"inheritable-attributes",children:"Inheritable Attributes"}),"\n",(0,s.jsx)(n.p,{children:"The following attributes can be inherited from nested setting properties:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Advanced]"})," - Child properties will be marked as advanced"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Category]"})," - Child properties will inherit the category name and color"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Group]"})," - Child properties will inherit the group name"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Indent]"})," - Child properties will inherit the indentation level"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[EnvironmentSpecific]"})," - Child properties will be marked as environment-specific"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[DependsOn]"})," - Child properties will inherit dependency relationships"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[DisplayScript]"})," - Child properties will inherit JavaScript display scripts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[MultiLine]"})," - Child properties will inherit multi-line editor configuration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[LookupTable]"})," - Child properties will inherit lookup table references"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[ValidValues]"})," - Child properties will inherit valid value constraints"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Secret]"})," - Child properties will be marked as secret/sensitive"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Validation]"})," - Child properties will inherit validation rules and regex patterns"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[ValidateGreaterThan]"})," - Child properties will inherit greater-than validation constraints"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[ValidateLessThan]"})," - Child properties will inherit less-than validation constraints"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[ValidateIsBetween]"})," - Child properties will inherit range validation constraints"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[ConfigurationSectionOverride]"})," - Child properties will inherit configuration section mappings"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class Settings : SettingsBase\n{\n    public override string ClientDescription => "Settings with inherited attributes";\n\n    [NestedSetting]\n    [Advanced]\n    [Category("Database Configuration", "#4f51c9")]\n    public DatabaseSettings Database { get; set; } = new();\n\n    public override void Validate(ILogger logger)\n    {\n        SetConfigurationErrorStatus(false);\n    }\n}\n\npublic class DatabaseSettings\n{\n    [Setting("Database connection string")]\n    public string ConnectionString { get; set; } = "";\n    \n    [Setting("Query timeout in seconds")]\n    public int TimeoutSeconds { get; set; } = 30;\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this example, both ",(0,s.jsx)(n.code,{children:"ConnectionString"})," and ",(0,s.jsx)(n.code,{children:"TimeoutSeconds"})," will:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Be marked as advanced settings (inherited from ",(0,s.jsx)(n.code,{children:"[Advanced]"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:['Be categorized under "Database Configuration" with the blue color (inherited from ',(0,s.jsx)(n.code,{children:"[Category]"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"attribute-override",children:"Attribute Override"}),"\n",(0,s.jsx)(n.p,{children:"Child properties can override inherited attributes by applying their own attributes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class DatabaseSettings\n{\n    [Setting("Database connection string")]\n    [Category("Connection", "#ff0000")]  // Overrides inherited category\n    public string ConnectionString { get; set; } = "";\n    \n    [Setting("Query timeout in seconds")]\n    // This will use the inherited category from the parent\n    public int TimeoutSeconds { get; set; } = 30;\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"multi-level-inheritance",children:"Multi-Level Inheritance"}),"\n",(0,s.jsx)(n.p,{children:"Attribute inheritance works with multiple levels of nesting:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'[NestedSetting]\n[Advanced]\npublic Level1 Level1 { get; set; } = new();\n\npublic class Level1\n{\n    [NestedSetting]\n    [Group("Security")]\n    public Level2 Level2 { get; set; } = new();\n}\n\npublic class Level2\n{\n    [Setting("API key")]\n    public string ApiKey { get; set; } = "";\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ApiKey"})," property will inherit both:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Advanced]"})," from the top-level nested setting"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:'[Group("Security")]'})," from the Level1 nested setting"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"appearance",children:"Appearance"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Nested Settings",src:t(1934).A+"",width:"2210",height:"976"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1934:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/nested-settings-ca4335c5686e3fe15409f653bb36dca8.png"},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);